Step: build-step-credential-initializer:

{"level":"warn","ts":1548954170.3632019,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548954170.363571,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1548954171.8515904,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1548954172.9414175,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/alejandroandreu/jx-test.git\" @ \"c5d18724b6d41ab09fb20422362e16f9872c6e0d\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  17.466 [id=32]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins1179873442078945578test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
Stage "CI Build and push snapshot" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/alejandroandreu/jx-test
[Pipeline] {
[Pipeline] git
Cloning the remote Git repository
Cloning repository https://github.com/alejandroandreu/jx-test.git
 > git init /home/jenkins/go/src/github.com/alejandroandreu/jx-test # timeout=10
Fetching upstream changes from https://github.com/alejandroandreu/jx-test.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/alejandroandreu/jx-test.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/alejandroandreu/jx-test.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/alejandroandreu/jx-test.git # timeout=10
Fetching upstream changes from https://github.com/alejandroandreu/jx-test.git
 > git fetch --tags --progress https://github.com/alejandroandreu/jx-test.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision c5d18724b6d41ab09fb20422362e16f9872c6e0d (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f c5d18724b6d41ab09fb20422362e16f9872c6e0d
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master c5d18724b6d41ab09fb20422362e16f9872c6e0d
Commit message: "Merge pull request #3 from alejandroandreu/fix-jenkinsfile"
First time build. Skipping changelog.
[Pipeline] sh
+ jx-release-version
+ echo 0.0.4
[Pipeline] sh
+ cat VERSION
+ jx step tag --version 0.0.4
Tag v0.0.4 created and pushed to remote origin
[Pipeline] sh
+ make build
CGO_ENABLED=0 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/jx-test main.go
[Pipeline] sh
+ cat VERSION
+ export VERSION=0.0.4
+ skaffold build -f skaffold.yaml
time="2019-01-31T17:03:38Z" level=warning msg="config version (skaffold/v1beta2) out of date: upgrading to latest (skaffold/v1beta3)"
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon  6.502MB
Step 1/4 : FROM scratch
 ---> 
Step 2/4 : EXPOSE 8080
 ---> Using cache
 ---> 32e7d66cb3bb
Step 3/4 : ENTRYPOINT /jx-test
 ---> Using cache
 ---> 9cefee649c76
Step 4/4 : COPY ./bin/ /
 ---> Using cache
 ---> 27a5a8da4642
Successfully built 27a5a8da4642
The push refers to a repository [gcr.io/stone-bongo-229410/jx-test]
876ca88c80ef: Preparing
876ca88c80ef: Layer already exists
0.0.4: digest: sha256:46762e1240db537304cc0a8018e1cb618538d376aa0a81fcfde6d24a702bc908 size: 528
Build complete in 3.550422929s
Starting test...
Test complete in 4.759Âµs
changeme -> gcr.io/stone-bongo-229410/jx-test:0.0.4
[Pipeline] sh
+ cat VERSION
+ jx step post build --image gcr.io/stone-bongo-229410/jx-test:0.0.4
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/alejandroandreu/jx-test/charts/jx-test
[Pipeline] {
[Pipeline] sh
+ cat ../../VERSION
+ jx step changelog --version v0.0.4
Using batch mode as inside a pipeline
Generating change log from git ref c5d18724b6d41ab09fb20422362e16f9872c6e0d => f13ebf1a71da699bb6e4726071d5dcc1e2fa04c8
Failed to enrich commits with issues: User.jenkins.io "" is invalid: metadata.name: Required value: name or generateName is required
Failed to enrich commits with issues: User.jenkins.io "" is invalid: metadata.name: Required value: name or generateName is required
Finding issues in commit messages using git format
No release found for alejandroandreu/jx-test and tag v0.0.4 so creating a new release
Updated the release information at https://github.com/alejandroandreu/jx-test/releases/tag/v0.0.4
generated: /home/jenkins/go/src/github.com/alejandroandreu/jx-test/charts/jx-test/templates/release.yaml
Created Release jx-test-0-0-4 resource in namespace jx
Updating PipelineActivity alejandroandreu-jx-test-master-4 with version 0.0.4
Updated PipelineActivities alejandroandreu-jx-test-master-4 with release notes URL: https://github.com/alejandroandreu/jx-test/releases/tag/v0.0.4
[Pipeline] sh
+ jx step helm release
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Uploading chart file jx-test-0.0.4.tgz to http://jenkins-x-chartmuseum:8080/api/charts
Received 201 response: {"saved":true}
[Pipeline] sh
+ cat ../../VERSION
+ jx promote -b --all-auto --timeout 1h --version 0.0.4
prow based install so skip waiting for the merge of Pull Requests to go green as currently there is an issue with gettingstatuses from the PR, see https://github.com/jenkins-x/jx/issues/2410
Promoting app jx-test version 0.0.4 to namespace jx-staging
Created Pull Request: https://github.com/midokura-bot/environment-midokura-ci-cluster-staging/pull/3

Pull Request https://github.com/midokura-bot/environment-midokura-ci-cluster-staging/pull/3 is merged at sha e379f3fef129c0f4a4059971be1f0e892167734d
Pull Request merged but we are not waiting for the update pipeline to complete!
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
